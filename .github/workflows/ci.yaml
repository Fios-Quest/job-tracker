on:
  push:

env:
  CARGO_TERM_COLOR: always

name: CI

jobs:
  check:
    name: cargo check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Cargo check
        run: cargo check --verbose

  build:
    name: cargo build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Cargo build
        run: cargo build --verbose

  test:
    name: cargo test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Cargo test
        run: cargo test --verbose

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Cargo fmt
        run: cargo fmt --check

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Cargo clippy
        run: cargo clippy -- -D warnings

  dx-fmt:
    name: dx fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install system packages
        run: |
          sudo apt-get install libgtk-3-dev javascriptcoregtk-4.1-dev libsoup-3.0-dev webkit2gtk-4.1-dev libxdo-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags gdk-3.0
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Use carbo binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install Dioxus-CLI
        run: cargo binstall dioxus-cli --force
      - name: Dioxus fmt
        run: dx fmt --check
